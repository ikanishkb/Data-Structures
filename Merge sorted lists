#include <iostream>
using namespace std;

class Node{
public:
int data;
Node* next;
Node(int d){
    data=d;
    next=NULL;
    }
};

Node* createLL(){
    Node* head = NULL;
    Node* tail = NULL;
    int x;

    while(true){
        cin>>x;
        if(x==-1)break;
        Node* NewNode = new Node(x);

        if(head==NULL){
            head=NewNode;
            tail=NewNode;
        }
        else{
            tail->next= NewNode;
            tail = tail->next;
        }
    }
    return head;
}

Node* mergeSortedLists(Node* head1, Node* head2){
    if (head1 == NULL) return head2;
    if (head2 == NULL) return head1;

    // BOTH list have atleast one-one node
    Node* ans = NULL;

    if (head1->data < head2->data){
        ans = head1;
        head1->next = mergeSortedLists(head1->next, head2);
        return ans;
    }
    else {
        ans = head2;
        head2->next = mergeSortedLists(head1, head2->next);
        return ans;
    }
}

void Display(Node* head){
    Node*cur=head;
    while(cur!=NULL){
        cout<<cur->data<<"->";
        cur=cur->next;
    }
    cout<<endl;
}

int main()
{
    Node* head1 = createLL();
    Display(head1);
    
    Node* head2 = createLL();
    Display(head2);

    Node* head3= mergeSortedLists(head1, head2);
    Display(head3);
}
